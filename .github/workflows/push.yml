name: Push

on:
  push:
    branches:
      - master
      - development
  worflow_dispatch:
  workflow_call:
    secrets:
      WWISE_EMAIL:
        required: true
      WWISE_PASSWORD:
        required: true
      GH_TOKEN:
        required: true
      WEBHOOK_URL:
        required: true

env:
  ARTIFACT_NAME: FicsItNetworks

permissions:
  actions: read

jobs:
  filter:
    name: Filter
    runs-on: ubuntu-latest
    outputs:
      build-mod: ${{ steps.filter.outputs.mod }}
      build-tools: ${{ steps.filter.outputs.tools }}
      generate-docs: ${{ steps.filter.outputs.gen-docs }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          mod:
            - ".github/workflows/build.yml"
            - "FicsItNetworks.uplugin"
            - "Content/**"
            - "Source/**"
            - "ThirdParty/**"
          gen-docs:
            - ".github/workflows/gen-docs.yml"
          tools:
            - ".github/workflows/build-tools.yml"
            - "Tools/DocumentationCLI"
          update-docs:
            - ".github/workflows/update-docs.yml"

  build:
    needs: filter
    if: needs.filter.outputs.build-mod == 'true'
    uses: ./.github/workflows/build.yml
    with:
      artifact_name: $ARTIFACT_NAME

  generate-docs:
    needs: [filter, build]
    if: always() && (needs.build.result == 'success' || needs.filter.outputs.generate-docs == 'true')
    uses: ./.github/workflows/gen-docs.yml
    with:
      artifact_name: $ARTIFACT_NAME

  tools:
    needs: filter
    if: needs.filter.outputs.build-tools
    uses: ./.github/workflows/build-tools.yml

  update-docs:
    needs: [filter, generate-docs, tools]
    if: always() && (needs.generate-docs.result == 'success' || needs.tools.result == 'success' ||  needs.filter.outputs.update-docs == 'true')
    uses: ./.github/workflows/update-docs.yml
    with:
      artifact_name: $ARTIFACT_NAME
